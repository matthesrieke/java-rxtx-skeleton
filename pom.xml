<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<parent>
		<groupId>org.n52</groupId>
		<artifactId>52-North</artifactId>
		<version>5.6.4</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.n52.ifgicopter</groupId>
	<artifactId>java-rxtx-skeleton</artifactId>
	<packaging>jar</packaging>
	<version>0.1.0-SNAPSHOT</version>
	
		<properties>
		<skipTests>true</skipTests>
		<rxtx.version>2.2pre1</rxtx.version>
		<native.lib.dir>lib-native</native.lib.dir>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.9.0</version>
				<configuration>
					<header>src/main/resources/52n_license_header.txt</header>
					<includes>
						<include>**/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- while in compile phase unpack the current profile's native lib to 
				the temporary lib folder. surefire can then use this for testing -->
			<plugin>
				<groupId>com.googlecode.mavennatives</groupId>
				<artifactId>maven-nativedependencies-plugin</artifactId>
				<version>0.0.6</version>
				<executions>
					<execution>
						<id>unpacknatives</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- this sets the directory of the native libs for the Maven Dependencies 
						in Eclipse, not "saving" them there automatically, but they are already there... -->
					<!-- <nativesTargetDir>target/${project.build.finalName}/${release.natives}</nativesTargetDir> -->
					<nativesTargetDir>${project.build.directory}/${native.lib.dir}</nativesTargetDir>
					<separateDirs>true</separateDirs>
				</configuration>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId> 
				<executions> <execution> <id>unpack-for-testing</id> <phase>compile</phase> 
				<goals> <goal>copy</goal> </goals> <configuration> <artifactItems> <artifactItem> 
				<groupId>org.rxtx</groupId> <artifactId>rxtx-native</artifactId> <version>${rxtx.version}</version> 
				<classifier>${build.type}</classifier> <type>jar</type> <overWrite>true</overWrite> 
				<outputDirectory>${project.build.directory}/testing_lib</outputDirectory> 
				</artifactItem> </artifactItems> </configuration> </execution> <execution> 
				<id>unpack-for-release</id> <phase>install</phase> <goals> <goal>unpack</goal> 
				</goals> <configuration> <artifactItems> <artifactItem> <groupId>org.rxtx</groupId> 
				<artifactId>rxtx-native</artifactId> <version>${rxtx.version}</version> <classifier>win32</classifier> 
				<type>jar</type> <overWrite>true</overWrite> <outputDirectory>${project.build.directory}/lib/native</outputDirectory> 
				</artifactItem> <artifactItem> <groupId>org.rxtx</groupId> <artifactId>rxtx-native</artifactId> 
				<version>${rxtx.version}</version> <classifier>linux32</classifier> <type>jar</type> 
				<overWrite>true</overWrite> <outputDirectory>${project.build.directory}/lib/native</outputDirectory> 
				</artifactItem> <artifactItem> <groupId>org.rxtx</groupId> <artifactId>rxtx-native</artifactId> 
				<version>${rxtx.version}</version> <classifier>mac</classifier> <type>jar</type> 
				<overWrite>true</overWrite> <outputDirectory>${project.build.directory}/lib/native</outputDirectory> 
				</artifactItem> <artifactItem> <groupId>org.rxtx</groupId> <artifactId>rxtx-native</artifactId> 
				<version>${rxtx.version}</version> <classifier>win64</classifier> <type>jar</type> 
				<overWrite>true</overWrite> <outputDirectory>${project.build.directory}/lib/native/64</outputDirectory> 
				</artifactItem> <artifactItem> <groupId>org.rxtx</groupId> <artifactId>rxtx-native</artifactId> 
				<version>${rxtx.version}</version> <classifier>linux64</classifier> <type>jar</type> 
				<overWrite>true</overWrite> <outputDirectory>${project.build.directory}/lib/native/64</outputDirectory> 
				</artifactItem> </artifactItems> </configuration> </execution> <execution> 
				<id>copy-for-release</id> <phase>install</phase> <goals> <goal>copy</goal> 
				</goals> <configuration> <artifactItems> <artifactItem> <groupId>org.rxtx</groupId> 
				<artifactId>rxtx</artifactId> <version>${rxtx.version}</version> <type>jar</type> 
				<overWrite>true</overWrite> <outputDirectory>${project.build.directory}/lib</outputDirectory> 
				</artifactItem> <artifactItem> <groupId>commons-logging</groupId> <artifactId>commons-logging</artifactId> 
				<version>1.1.1</version> <type>jar</type> <overWrite>true</overWrite> <outputDirectory>${project.build.directory}/lib</outputDirectory> 
				</artifactItem> </artifactItems> </configuration> </execution> </executions> 
				</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skipTests}</skipTests>
					<forkMode>once</forkMode>
					<workingDirectory>${project.build.directory}</workingDirectory>
					<!-- add the native libs to the path -->
					<argLine>-Djava.library.path=${project.build.directory}/${native.lib.dir}/${native.arch}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/resources/release-assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

		</plugins>
	</build>


	<!-- hopefully this will never get down (rxtx including native bins): http://repo.opennms.org/maven2/org/rxtx/rxtx/2.2pre2/ -->
	<repositories>
		<repository>
			<id>n52-releases</id>
			<name>52n Releases</name>
			<url>http://52north.org/maven/repo/releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>n52-snapshots</id>
			<name>52n Snapshots</name>
			<url>http://52north.org/maven/repo/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<!-- Tentative local repo for libs that are not migrated to Maven dependency 
				mechanism and available in online repositories. -->
			<id>lib-repository</id>
			<name>Local Repository</name>
			<url>file:///${basedir}/lib-repository/</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- <dependency> <groupId>org.rxtx</groupId> <artifactId>rxtx</artifactId> 
			<version>2.1.7</version> <scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>org.rxtx</groupId>
			<artifactId>rxtx</artifactId>
			<version>${rxtx.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
		</dependency>

		<dependency>
			<groupId>com.vividsolutions</groupId>
			<artifactId>jts</artifactId>
			<version>1.12</version>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>arch64</id>
			<activation>
				<os>
					<arch>amd64</arch>
				</os>
			</activation>
			<!-- TODO: could set the dependency to natives here instead of jogl.pom, 
				but then there are not both binaries in the assembly -->
			<properties>
				<native.arch>x64</native.arch>
			</properties>
		</profile>
		<profile>
			<id>arch86</id>
			<activation>
				<os>
					<arch>x86</arch>
				</os>
			</activation>
			<properties>
				<native.arch>x86</native.arch>
			</properties>
		</profile>
	</profiles>

</project>